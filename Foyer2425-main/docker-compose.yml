version: '3.8'

services:
  app:
    image: arrami/foyer-app:latest
    container_name: spring-app
    ports:
      - "8080:8080"
    restart: always
    networks:
      - devops

  postgres:
    image: postgres:13
    container_name: sonar-postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devops
    restart: always

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    depends_on:
      - postgres
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - devops
    restart: always

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8081:8080"   # Jenkins Web UI
      - "50000:50000" # Jenkins agents
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - devops
    restart: always

networks:
  devops:

volumes:
  jenkins_home:
  sonarqube_data:
  sonarqube_logs:
  postgres_data:
