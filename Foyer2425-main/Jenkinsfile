pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "arrami/foyer-app:latest"
        SONAR_HOST = "sonarqube"
        SONAR_TOKEN = credentials('sonar-token')
    }

    tools {
        maven 'Maven3.9.6'
        // jdk 'JDK17' // décommente si configuré dans Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/HEDI121/Pi.git'
            }
        }

        stage('Build & Compile') {
            steps {
                dir('Foyer2425-main') {
                    sh 'mvn clean compile -s settings.xml'
                }
            }
        }

        stage('Tests') {
            steps {
                dir('Foyer2425-main') {
                    sh 'mvn test -s settings.xml'
                }
            }
        }

        stage('Analyse SonarQube') {
            steps {
                withSonarQubeEnv("SonarQube") {
                    dir('Foyer2425-main') {
                        sh "mvn sonar:sonar -s settings.xml -Dsonar.host.url=http://${SONAR_HOST}:9000 -Dsonar.login=${env.SONAR_TOKEN}"
                    }
                }
            }
        }

        stage('Deploy to Nexus') {
            steps {
                dir('Foyer2425-main') {
                    withCredentials([usernamePassword(credentialsId: 'nexus-credentials', usernameVariable: 'NEXUS_CREDS_USR', passwordVariable: 'NEXUS_CREDS_PSW')]) {
                        sh '''
                            mvn deploy -s settings.xml 
                        '''
                    }
                }
            }
        }

        stage('Docker Build') {
            steps {
                dir('Foyer2425-main') {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Push Docker') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                dir('Foyer2425-main') {
                    sh 'docker-compose down || true'
                    sh 'docker-compose up -d --build'
                }
            }
        }
    }
}
